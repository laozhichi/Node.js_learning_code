1.命令行窗口(小黑屏)、CMD窗口、终端、shell
	- 开始菜单 --> 运行 --> CMD --> 回车
	- 常用的指令：
		dir 列出当前目录下的所有文件
		cd 目录名 进入到指定的目录
		md或者mkdir 目录名 创建一个文件夹
		rd 或者rm- r 目录名 删除一个文件夹
                                cd : 改变目录。
                                cd . . 回退到上一个目录，直接cd进入默认目录
                                pwd : 显示当前所在的目录路径。
                                ls(ll): ?都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。
                                touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。
                                rm: ?删除一个文件, rm index.js 就会把index.js文件删除。
                                rm -r : ?删除一个文件夹, rm -r src 删除src目录
                                rm -rf / 切勿在Linux中尝试！删除电脑中全部文件！   删库跑路，哈哈哈哈哈
                                mv 移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下。
                                reset 重新初始化终端/清屏。
                                clear 清屏。
                                history 查看命令历史。
                                help 帮助。
                                exit 退出。
                                #表示注释	

	- 目录
		. 表示当前目录
		.. 表示上一级目录
		
	- 环境变量（windows系统中变量）	
		path
			C:\work\jdk\jdk1.7.0_75/bin;
			%CATALINA_HOME%/bin;
			C:\work\soft\tools\AppServ\Apache24\bin;
			C:\work\soft\tools\AppServ\php5;
			C:\Users\lilichao\AppData\Local\Programs\Fiddler;
			C:\work\environment\Egret\Egret Wing 3\bin;
			C:\Users\lilichao\AppData\Roaming\npm;
			C:\Program Files\MongoDB\Server\3.2\bin;
			C:\Users\lilichao\Desktop\hello
			
		- 当我们在命令行窗口打开一个文件，或调用一个程序时，
			系统会首先在当前目录下寻找文件程序，如果找到了则直接打开
			如果没有找到则会依次到环境变量path的路径中寻找，直到找到为止
			如果没找到则报错
			

		- 所以我们可以将一些经常需要访问的程序和文件的路径添加到path中，
			这样我们就可以在任意位置来访问这些文件和程序了
                                 例如创建了hello.txt文件，可以直接在命令行当中输入hello.txt进行访问
			
I/O (Input/Output)
	- I/O操作指的是对磁盘的读写操作
	
Node
	- Node是对ES标准一个实现，Node也是一个JS引擎
	- 通过Node可以使js代码在服务器端执行
	- Node仅仅对ES标准进行了实现，所以在Node中不包含DOM 和 BOM	
	- Node中可以使用所有的内建对象
		String Number Boolean Math Date RegExp Function Object Array
		而BOM和DOM都不能使用
			但是可以使用 console 也可以使用定时器（setTimeout() setInterval()）
			
	- Node可以在后台来编写服务器
		Node编写服务器都是单线程的服务器
		- 进程
			- 进程就是一个一个的工作计划（工厂中的车间）
		- 线程
			- 线程是计算机最小的运算单位（工厂中的工人）
				线程是干活的
				
	- 传统的服务器都是多线程的
		- 每进来一个请求，就创建一个线程去处理请求
		
	- Node的服务器单线程的
		- Node处理请求时是单线程，但是在后台拥有一个I/O线程池
	
	
	
	
	
	
	
	
	
	
	
		
			
		